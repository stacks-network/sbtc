/*
 * emily-openapi-spec
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// WithdrawalUpdate : A singular Withdrawal update that contains only the fields pertinent to updating the status of a withdrawal. This includes the key related data in addition to status history related data.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WithdrawalUpdate {
    #[serde(
        rename = "fulfillment",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub fulfillment: Option<Option<Box<models::Fulfillment>>>,
    /// The id of the Stacks withdrawal request that initiated the sBTC operation.
    #[serde(rename = "requestId")]
    pub request_id: u64,
    #[serde(rename = "status")]
    pub status: models::Status,
    /// The status message of the withdrawal.
    #[serde(rename = "statusMessage")]
    pub status_message: String,
}

impl WithdrawalUpdate {
    /// A singular Withdrawal update that contains only the fields pertinent to updating the status of a withdrawal. This includes the key related data in addition to status history related data.
    pub fn new(
        request_id: u64,
        status: models::Status,
        status_message: String,
    ) -> WithdrawalUpdate {
        WithdrawalUpdate {
            fulfillment: None,
            request_id,
            status,
            status_message,
        }
    }
}
