name: Manual Tag and Release

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Tag Name (e.g., v1.0.0)"
        required: true
      release:
        type: choice
        description: "Trigger Release?"
        required: true
        options:
        - no
        - yes

permissions:
  contents: write # Needed to create a tag
  actions: write # Needed to trigger another workflow via API

jobs:
  create_tag:
    name: Create Tag
    runs-on: ubuntu-latest
    environment: Tags
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Create Tag
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const tag = "${{ inputs.tag_name }}";
            const semverRegex = /^v?\d+\.\d+\.\d+(-[\w.-]+)?(\+[\w.-]+)?$/;
            
            if (!semverRegex.test(tag)) {
              core.setFailed(`Error: Invalid tag format: "${tag}". Expected SemVer like X.Y.Z, vX.Y.Z-note, or X.Y.Z+note`);
            } else {
              github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `refs/tags/${tag}`,
                sha: context.sha
              });
            }

  trigger_release:
    name: Trigger Release
    runs-on: ubuntu-latest
    needs: create_tag
    if: ${{ inputs.release == 'true' }}
    steps:
      - name: Trigger Release Workflow
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const response = await github.request('POST /repos/{owner}/{repo}/dispatches', {
              owner: context.repo.owner,
              repo: context.repo.repo,
              event_type: 'image_build_and_draft_release',
              client_payload: {
                tag_name: '${{ inputs.tag_name }}' // Pass the input value
              }
            });
