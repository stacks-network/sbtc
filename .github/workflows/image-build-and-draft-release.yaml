## Github workflow to build a multiarch docker image from pre-built binaries

name: Docker Hub Release Image (Binary)

on:
  push:
    tags:
      - '*'

permissions:
  id-token: write
  contents: write
  attestations: write
  packages: write

## Define which docker arch to build for
env:
  docker_platforms: "linux/amd64"
  docker-org: blockstack
  latest_release: $(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name)

concurrency:
  group: docker-image-${{ github.head_ref || github.ref || github.run_id }}
  ## Always cancel duplicate jobs
  cancel-in-progress: true

run-name: "Build and Release sBTC Signer ${{ github.ref_name }} Docker Image"

jobs:
  image:
    name: Build Image
    strategy:
      fail-fast: false
      ## Build a maximum of 2 images for if / when this is extended
      ## for more distribution types.
      max-parallel: 2
      matrix:
        dist:
          - debian
        docker_target:
          - signer
          - blocklist-client
    outputs:
      signer: ${{ steps.save_digest.outputs.signer }}
      blocklist-client: ${{ steps.save_digest.outputs.blocklist-client }}

    runs-on: ubuntu-latest
    environment: "Push to Docker"
    steps:
      ## Setup Docker for the builds
      - name: Docker setup
        id: docker_setup
        uses: stacks-network/actions/docker@922078e86a42551502809ac517fd2837840433e6
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      ## Checkout the branch of the release provided.
      ## This requires that a release branch exists for the tag.
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      ## if the repo owner is not `stacks-network`, default to a docker-org of the repo owner (i.e. github user id)
      ## this allows forks to run the docker push workflows without having to hardcode a dockerhub org (but it does require docker hub user to match github username)
      - name: Set Local env vars
        id: set_env
        if: |
          github.repository_owner != 'stacks-network'
        run: |
          echo "docker-org=${{ github.repository_owner }}" >> "$GITHUB_ENV"

      ## Set docker metatdata
      ## - depending on the matrix.dist, different tags will be enabled
      ## ex. debian will have this tag: `type=ref,event=tag,enable=${{ matrix.dist == 'debian' }}`
      - name: Docker Metadata ( ${{ matrix.dist }} )
        id: docker_metadata
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: |
            ${{ env.docker-org }}/sbtc
          tags: |
            type=raw,value=${{ matrix.docker_target }}-${{ github.ref_name }}-${{ matrix.dist }}
            type=raw,value=${{ matrix.docker_target }}-${{ github.ref_name }},enable=${{ matrix.dist == 'debian' }}
            type=raw,value=${{ matrix.docker_target }}-latest,enable=${{ env.latest_release == github.ref_name && matrix.dist == 'debian' }}
            type=raw,value=${{ matrix.docker_target }}-latest-${{ matrix.dist }},enable=${{ env.latest_release == github.ref_name }}

      ## Build docker image for release
      - name: Build and Push ( ${{ matrix.dist }} ${{ matrix.docker_target }} )
        id: docker_build
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
        with:
          file: ./.github/actions/dockerfiles/Dockerfile.${{ matrix.docker_target }}.${{ matrix.dist }}
          platforms: ${{ env.docker_platforms }}
          tags: ${{ steps.docker_metadata.outputs.tags }}
          labels: ${{ steps.docker_metadata.outputs.labels }}
          target: ${{ matrix.docker_target }}
          push: true
          build-args: |
            GIT_COMMIT=${{ github.ref_name }}

      - name: Save digest as output
        id: save_digest
        run: echo "${{ matrix.docker_target }}=${{ steps.docker_build.outputs.digest }}" >> "$GITHUB_OUTPUT"

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@7668571508540a607bdfd90a87a560489fe372eb #v2.1.0
        with:
          subject-name: index.docker.io/${{ env.docker-org }}/sbtc
          subject-digest: ${{ steps.docker_build.outputs.digest }}
          push-to-registry: true
  
  release:
    name: Draft Release
    runs-on: ubuntu-latest
    needs: image
    if: startsWith(github.ref, 'refs/tags/') # Runs only if triggered by a tag
    steps:

      - name: Set TAG_NAME
        run: echo "TAG_NAME=${{ github.ref_name }}" >> "$GITHUB_ENV"

      - name: Generate Release Notes
        id: generate-release-notes
        run: |
          cat <<EOF > release_notes.md
          <A manual one-liner with changes>Fill the section.
  
          [Highlights](#highlights) • [Images](#images) • [Upgrade Instructions](#upgrade-instructions)
  
          ## ✨ Highlights <a id="highlights">
  
          <A manual one-liner with changes>Fill the section.
  
          ## 🔗 Links
  
          ### 🐳 Images <a id="images">
  
          - [\`blockstack/sbtc:signer-${{ env.TAG_NAME }}@${{ needs.image.outputs.signer }}\`](https://hub.docker.com/layers/blockstack/sbtc/signer-${{ env.TAG_NAME }}/images/${{ needs.image.outputs.signer }})
          - [\`blockstack/sbtc:blocklist-client-${{ env.TAG_NAME }}@${{ needs.image.outputs.blocklist-client }}\`](https://hub.docker.com/layers/blockstack/sbtc/blocklist-client-${{ env.TAG_NAME }}/images/${{ needs.image.outputs.blocklist-client }})
          ⚠️ Always use [immutable image tags](https://docs.docker.com/reference/cli/docker/image/pull/#pull-an-image-by-digest-immutable-identifier).
  
          🔎 Verify the attestation of these images using [this guide](https://docs.github.com/en/actions/security-for-github-actions/using-artifact-attestations/using-artifact-attestations-to-establish-provenance-for-builds#verifying-artifact-attestations-with-the-github-cli).
  
          ### 📙 Database migrations
  
          Here: [\`signer/migrations\`](https://github.com/stacks-network/sbtc/tree/${{ env.TAG_NAME }}/signer/migrations).
  
          ## 🛠️ Upgrade Instructions: <a id="upgrade-instructions">
  
          1. Stop your sBTC signer
          2. Backup your database
          3. Edit your configuration as instructed
          4. Apply database migrations (only if not running with the \`--migrate-db\` flag)
          5. Update your sBTC images as specified above
          6. Restart your sBTC signer and blocklist client
          EOF
  
      - name: Create GitHub Release
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea #v7.0.01
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const fs = require('fs');
            const releaseNotes = fs.readFileSync('release_notes.md', 'utf8');
    
            const release = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: '${{ env.TAG_NAME }}',
              name: '${{ env.TAG_NAME }}',
              body: releaseNotes,
              draft: true,
              generate_release_notes: true
            });
    
            console.log(`Created release: ${release.data.html_url}`);