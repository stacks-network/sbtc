/*
 * emily-openapi-spec
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// DepositUpdate : A singular Deposit update that contains only the fields pertinent to updating the status of a deposit. This includes the key related data in addition to status history related data.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DepositUpdate {
    /// Output index on the bitcoin transaction associated with this specific deposit.
    #[serde(rename = "bitcoinTxOutputIndex")]
    pub bitcoin_tx_output_index: u32,
    /// Bitcoin transaction id.
    #[serde(rename = "bitcoinTxid")]
    pub bitcoin_txid: String,
    #[serde(
        rename = "fulfillment",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub fulfillment: Option<Option<Box<models::Fulfillment>>>,
    /// The most recent Stacks block hash the API was aware of when the deposit was last updated. If the most recent update is tied to an artifact on the Stacks blockchain then this hash is the Stacks block hash that contains that artifact.
    #[serde(rename = "lastUpdateBlockHash")]
    pub last_update_block_hash: String,
    /// The most recent Stacks block height the API was aware of when the deposit was last updated. If the most recent update is tied to an artifact on the Stacks blockchain then this height is the Stacks block height that contains that artifact.
    #[serde(rename = "lastUpdateHeight")]
    pub last_update_height: u64,
    #[serde(rename = "status")]
    pub status: models::Status,
    /// The status message of the deposit.
    #[serde(rename = "statusMessage")]
    pub status_message: String,
}

impl DepositUpdate {
    /// A singular Deposit update that contains only the fields pertinent to updating the status of a deposit. This includes the key related data in addition to status history related data.
    pub fn new(
        bitcoin_tx_output_index: u32,
        bitcoin_txid: String,
        last_update_block_hash: String,
        last_update_height: u64,
        status: models::Status,
        status_message: String,
    ) -> DepositUpdate {
        DepositUpdate {
            bitcoin_tx_output_index,
            bitcoin_txid,
            fulfillment: None,
            last_update_block_hash,
            last_update_height,
            status,
            status_message,
        }
    }
}
